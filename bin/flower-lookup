#!/usr/bin/env node

const app = require('commander');
const Onramp = require('../');
const { version } = require('../package.json');

app.version(version);

app.option('-u, --useHost [host]', 'The host of the flower-lookup server');
app.option('-o, --allowOrigins [xxx,xxx]', 'The allowOrigins of the flower-lookup server');
app.option('-s, --secret [secret hash]', 'The secret hash of the flower-garden client');

app.parse(process.argv);

(function main() {
	const host = typeof app.useHost === 'string' ? app.useHost : undefined;
	const allowOrigins = typeof app.allowOrigins === 'string' ? app.allowOrigins : undefined;
	const secret = typeof app.secret === 'string' ? app.secret : undefined;

	// Create the onramp instance
	const onramp = Onramp.create({ host, allowOrigins, secret });

	configureBroadcast(onramp);
}());

function configureBroadcast(onramp) {
	// Whenever a connection is established, tell it about all the 
	// other connections available, and then broadcast it's connection
	// identifier to the rest of the connections so everyone always
	// knows who is connected to the onramp
	onramp.on('connection', function(connection) {
		console.log('new connection: ' + connection.address);
		onramp.connections.forEach(function(other) {
			if(other === connection) return;
			
			connection.send(other.address);
			other.send(connection.address);
		});
	});
}
